{"version":3,"sources":["styles.module.css","components/Filter/styles.module.css","redux/types.js","redux/reducer.js","redux/storage.js","redux/selectors.js","components/ContactForm/ContactForm.js","redux/actions.js","components/ContactList/ContactList.js","components/Filter/Filter.js","App.js","index.js","components/ContactForm/styles.module.css","components/ContactList/styles.module.css"],"names":["module","exports","types","ADD","DELETE","FILTER","initialState","items","id","name","number","filter","contactsList","localStorage","getItem","fromLocalStorage","JSON","parse","rootReducer","contacts","state","action","type","payload","contact","store","configureStore","reducer","getContacts","getFilter","getVisibleContacts","filterContacts","toLowerCase","includes","INITIAL_STATE","ContactForm","useState","setName","setNumber","useSelector","dispatch","useDispatch","useEffect","setItem","stringify","handleChangeForm","target","value","validateForm","isExistContact","find","alert","onCheckUnique","resetForm","className","styles","contactForm","onSubmit","e","preventDefault","newContact","uuid","addContact","contactFormName","placeholder","onChange","contactFormNumber","addBtn","ContactListItem","contactListItem","removeBtn","onClick","deleteContact","ContactList","length","contactList","map","Filter","addFilter","contactFormFilter","App","phoneBookContainer","phoneBook","ReactDOM","render","document","getElementById"],"mappings":"kIACAA,EAAOC,QAAU,CAAC,mBAAqB,mCAAmC,UAAY,0BAA0B,SAAW,2B,mBCA3HD,EAAOC,QAAU,CAAC,kBAAoB,oC,yFCKvBC,EAND,CACZC,IAAK,cACLC,OAAQ,iBACRC,OAAQ,mBCDJC,EAAe,CACnBC,MAAO,CACL,CACEC,GAAI,OACJC,KAAM,gBACNC,OAAQ,aAEV,CACEF,GAAI,OACJC,KAAM,iBACNC,OAAQ,aAEV,CACEF,GAAI,OACJC,KAAM,gBACNC,OAAQ,aAEV,CACEF,GAAI,OACJC,KAAM,iBACNC,OAAQ,cAGZC,OAAQ,IAGJC,EAAeC,aAAaC,QAAQ,YAEpCC,EAAmB,CACvBR,MAFyBS,KAAKC,MAAML,GAGpCD,OAAQ,IC7BJO,EAAc,CAClBC,SD+Bc,WAAuD,IAAtDC,EAAqD,uDAA7CL,GAAoBT,EAAce,EAAW,uCAC9DF,EAAWC,EACjB,OAAQC,EAAOC,MACb,KAAKpB,EAAMC,IACT,OAAO,2BACFgB,GADL,IAEEZ,MAAM,GAAD,mBAAMY,EAASZ,OAAf,CAAsBc,EAAOE,YAEtC,KAAKrB,EAAME,OACT,OAAO,2BACFe,GADL,IAEEZ,MAAOY,EAASZ,MAAMI,QAAO,SAACa,GAAD,OAAaA,EAAQhB,KAAOa,EAAOE,aAEpE,KAAKrB,EAAMG,OACT,OAAO,2BACFc,GADL,IAEER,OAAQ,CAACU,EAAOE,WAEpB,QACE,OAAOH,KC3CEK,EAJDC,YAAe,CAC3BC,QAAST,I,eCRLU,EAAc,SAACR,GAAD,OAAWA,EAAMD,SAASZ,OACxCsB,EAAY,SAACT,GAAD,OAAWA,EAAMD,SAASR,QAEtCmB,EAAqB,SAACV,GAC1B,IAAMD,EAAWS,EAAYR,GACvBW,EAAiBF,EAAUT,GACjC,OAAOD,EAASR,QAAO,SAACa,GAAD,OAAaA,EAAQf,KAAKuB,cAAcC,SAASF,O,+BCCpEG,EACE,GADFA,EAEI,GAyFKC,EAtFK,WAAO,IAAD,EACAC,mBAASF,GADT,mBACjBzB,EADiB,KACX4B,EADW,OAEID,mBAASF,GAFb,mBAEjBxB,EAFiB,KAET4B,EAFS,KAGlBnB,EAAWoB,YAAYX,GACvBY,EAAWC,cAEjBC,qBAAU,WACR7B,aAAa8B,QAAQ,WAAY3B,KAAK4B,UAAUzB,MAC/C,CAACA,IAEJ,IAAM0B,EAAmB,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OAClBrC,EAAgBqC,EAAhBrC,KAAMsC,EAAUD,EAAVC,MACd,OAAQtC,GACN,IAAK,OACH4B,EAAQU,GACR,MACF,IAAK,SACHT,EAAUS,KA6BVC,EAAe,WACnB,OAAKvC,GAASC,EAPM,SAACD,GACrB,IAAMwC,IAAmB9B,EAAS+B,MAAK,SAAC1B,GAAD,OAAaA,EAAQf,OAASA,KAErE,OADAwC,GAAkBE,MAAM,WAAD,OAAY1C,EAAZ,wBACfwC,EAQDG,CAAc3C,IAHnB0C,MAAM,wBACC,IAKLE,EAAY,WAChBhB,EAAQH,GACRI,EAAUJ,IAGZ,OACE,uBAAMoB,UAAWC,IAAOC,YAAaC,SApCd,SAACC,GAIxB,GAHAA,EAAEC,iBAEsBX,IACxB,CAEA,IAAMY,EAAa,CACjBpD,GAAIqD,cACJpD,OACAC,UAGF8B,EC9Ce,SAACoB,GAAD,MAAiB,CAClCtC,KAAMpB,EAAMC,IACZoB,QAASqC,GD4CEE,CAAWF,IACpBP,MAuBA,UACE,uBACEC,UAAWC,IAAOQ,gBAClBzC,KAAK,OACLb,KAAK,OACLuD,YAAY,aACZjB,MAAOtC,EACPwD,SAAUpB,IAEZ,uBACA,uBACES,UAAWC,IAAOW,kBAClB5C,KAAK,MACLb,KAAK,SACLuD,YAAY,qBACZjB,MAAOrC,EACPuD,SAAUpB,IAEZ,uBACA,wBAAQS,UAAWC,IAAOY,OAAQ7C,KAAK,SAAvC,6B,gBEtFA8C,EAAkB,SAAC,GAA0B,IAAxB5D,EAAuB,EAAvBA,GAAIC,EAAmB,EAAnBA,KAAMC,EAAa,EAAbA,OAC7B8B,EAAWC,cACjB,OACE,qBAAIa,UAAWC,IAAOc,gBAAtB,UACE,wBAAQf,UAAWC,IAAOe,UAAWC,QAAS,kBAAM/B,EDFpC,SAAChC,GAAD,MAAS,CAC7Bc,KAAMpB,EAAME,OACZmB,QAASf,GCAwDgE,CAAchE,KAA3E,eAGCC,EAJH,KAIWC,MAiBA+D,EAZK,WAClB,IAAMtD,EAAWoB,YAAYT,GAC7B,OAAwB,IAApBX,EAASuD,OAAqB,KAEhC,oBAAIpB,UAAWC,IAAOoB,YAAtB,SACGxD,EAASyD,KAAI,SAACpD,GAAD,OACZ,cAAC,EAAD,eAAsCA,GAAhBA,EAAQhB,U,iBCEvBqE,EApBA,WACb,IAAMlE,EAAS4B,YAAYV,GACrBW,EAAWC,cAEXqC,EAAY,SAAC/B,GACjBP,EFEmB,SAAC7B,GAAD,MAAa,CAClCW,KAAMpB,EAAMG,OACZkB,QAASZ,GEJEoB,CAAegB,EAAMf,iBAGhC,OACE,uBACEsB,UAAWC,IAAOwB,kBAClBzD,KAAK,OACLb,KAAK,SACLsC,MAAOpC,EACPsD,SAAU,gBAAGnB,EAAH,EAAGA,OAAH,OAAgBgC,EAAUhC,EAAOC,QAC3CiB,YAAY,2B,iBCCHgB,EAhBH,WACV,OACE,sBAAK1B,UAAWC,IAAO0B,mBAAvB,UACE,sBAAK3B,UAAWC,IAAO2B,UAAvB,UACE,2CACA,cAAC,EAAD,OAEF,sBAAK5B,UAAWC,IAAOpC,SAAvB,UACE,0CACA,cAAC,EAAD,IACA,cAAC,EAAD,WCVRgE,IAASC,OACP,cAAC,IAAD,CAAU3D,MAAOA,EAAjB,SACE,cAAC,EAAD,MAEF4D,SAASC,eAAe,U,kBCR1BtF,EAAOC,QAAU,CAAC,gBAAkB,gCAAgC,kBAAoB,kCAAkC,OAAS,yB,kBCAnID,EAAOC,QAAU,CAAC,YAAc,4BAA4B,gBAAkB,gCAAgC,UAAY,6B","file":"static/js/main.37ece905.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"phoneBookContainer\":\"styles_phoneBookContainer__gREXG\",\"phoneBook\":\"styles_phoneBook__3Itkx\",\"contacts\":\"styles_contacts__1Molk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactFormFilter\":\"styles_contactFormFilter__2OsP9\"};","const types = {\n  ADD: 'contact/add',\n  DELETE: 'contact/delete',\n  FILTER: 'contacts/filter',\n};\n\nexport default types;\n","import types from './types';\n\nconst initialState = {\n  items: [\n    {\n      id: 'id-1',\n      name: 'Rosie Simpson',\n      number: '459-12-56',\n    },\n    {\n      id: 'id-2',\n      name: 'Hermione Kline',\n      number: '443-89-12',\n    },\n    {\n      id: 'id-3',\n      name: 'Eden Clements',\n      number: '645-17-79',\n    },\n    {\n      id: 'id-4',\n      name: 'Annie Copeland',\n      number: '227-91-26',\n    },\n  ],\n  filter: [],\n};\n\nconst contactsList = localStorage.getItem('contacts');\nconst parsedContactsList = JSON.parse(contactsList);\nconst fromLocalStorage = {\n  items: parsedContactsList,\n  filter: [],\n};\n\nconst reducer = (state = fromLocalStorage || initialState, action) => {\n  const contacts = state;\n  switch (action.type) {\n    case types.ADD:\n      return {\n        ...contacts,\n        items: [...contacts.items, action.payload],\n      };\n    case types.DELETE:\n      return {\n        ...contacts,\n        items: contacts.items.filter((contact) => contact.id !== action.payload),\n      };\n    case types.FILTER:\n      return {\n        ...contacts,\n        filter: [action.payload],\n      };\n    default:\n      return state;\n  }\n};\n\nexport default reducer;","import { configureStore } from '@reduxjs/toolkit';\nimport reducer from './reducer';\n\nconst rootReducer = {\n  contacts: reducer,\n};\n\nconst store = configureStore({\n  reducer: rootReducer,\n});\n\nexport default store;","const getContacts = (state) => state.contacts.items;\nconst getFilter = (state) => state.contacts.filter;\n\nconst getVisibleContacts = (state) => {\n  const contacts = getContacts(state);\n  const filterContacts = getFilter(state);\n  return contacts.filter((contact) => contact.name.toLowerCase().includes(filterContacts));\n};\n\nexport { getContacts, getFilter, getVisibleContacts };","import { useState, useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { getContacts } from '../../redux/selectors';\nimport { addContact } from '../../redux/actions';\nimport { v4 as uuid } from 'uuid';\nimport styles from './styles.module.css';\n\nconst INITIAL_STATE = {\n  name: '',\n  number: '',\n};\n\nconst ContactForm = () => {\n  const [name, setName] = useState(INITIAL_STATE.name);\n  const [number, setNumber] = useState(INITIAL_STATE.number);\n  const contacts = useSelector(getContacts);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    localStorage.setItem('contacts', JSON.stringify(contacts));\n  }, [contacts]);\n\n  const handleChangeForm = ({ target }) => {\n    const { name, value } = target;\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n      case 'number':\n        setNumber(value);\n        break;\n      default:\n        break;\n    }\n  };\n\n  const handleSubmitForm = (e) => {\n    e.preventDefault();\n\n    const isValidatedForm = validateForm();\n    if (!isValidatedForm) return;\n\n    const newContact = {\n      id: uuid(),\n      name,\n      number,\n    };\n\n    dispatch(addContact(newContact));\n    resetForm();\n  };\n\n  const onCheckUnique = (name) => {\n    const isExistContact = !!contacts.find((contact) => contact.name === name);\n    isExistContact && alert(`Contact ${name} is already exist!`);\n    return !isExistContact;\n  };\n\n  const validateForm = () => {\n    if (!name || !number) {\n      alert('Some field is empty');\n      return false;\n    }\n    return onCheckUnique(name);\n  };\n\n  const resetForm = () => {\n    setName(INITIAL_STATE.name);\n    setNumber(INITIAL_STATE.number);\n  };\n\n  return (\n    <form className={styles.contactForm} onSubmit={handleSubmitForm}>\n      <input\n        className={styles.contactFormName}\n        type=\"text\"\n        name=\"name\"\n        placeholder=\"Enter name\"\n        value={name}\n        onChange={handleChangeForm}\n      />\n      <br />\n      <input\n        className={styles.contactFormNumber}\n        type=\"tel\"\n        name=\"number\"\n        placeholder=\"Enter phone number\"\n        value={number}\n        onChange={handleChangeForm}\n      />\n      <br />\n      <button className={styles.addBtn} type=\"submit\">\n        Add contact\n      </button>\n    </form>\n  );\n};\n\nexport default ContactForm;","import types from './types';\n\nconst addContact = (newContact) => ({\n  type: types.ADD,\n  payload: newContact,\n});\n\nconst deleteContact = (id) => ({\n  type: types.DELETE,\n  payload: id,\n});\n\nconst filterContacts = (filter) => ({\n  type: types.FILTER,\n  payload: filter,\n});\n\nexport { addContact, deleteContact, filterContacts };","import { useSelector, useDispatch } from 'react-redux';\nimport { deleteContact } from '../../redux/actions';\nimport { getVisibleContacts } from '../../redux/selectors';\nimport styles from './styles.module.css';\n\nconst ContactListItem = ({ id, name, number }) => {\n  const dispatch = useDispatch();\n  return (\n    <li className={styles.contactListItem}>\n      <button className={styles.removeBtn} onClick={() => dispatch(deleteContact(id))}>\n        X\n      </button>\n      {name}: {number}\n    </li>\n  );\n};\n\nconst ContactList = () => {\n  const contacts = useSelector(getVisibleContacts);\n  if (contacts.length === 0) return null;\n  return (\n    <ul className={styles.contactList}>\n      {contacts.map((contact) => (\n        <ContactListItem key={contact.id} {...contact} />\n      ))}\n    </ul>\n  );\n};\n\nexport default ContactList;","import { useSelector, useDispatch } from 'react-redux';\nimport { filterContacts } from '../../redux/actions';\nimport { getFilter } from '../../redux/selectors';\nimport styles from './styles.module.css';\n\nconst Filter = () => {\n  const filter = useSelector(getFilter);\n  const dispatch = useDispatch();\n\n  const addFilter = (value) => {\n    dispatch(filterContacts(value.toLowerCase()));\n  };\n\n  return (\n    <input\n      className={styles.contactFormFilter}\n      type=\"text\"\n      name=\"filter\"\n      value={filter}\n      onChange={({ target }) => addFilter(target.value)}\n      placeholder=\"Enter name for Search\"\n    />\n  );\n};\n\nexport default Filter;","import ContactForm from './components/ContactForm/ContactForm';\nimport ContactList from './components/ContactList/ContactList';\nimport Filter from './components/Filter/Filter';\nimport styles from './styles.module.css';\n\nconst App = () => {\n  return (\n    <div className={styles.phoneBookContainer}>\n      <div className={styles.phoneBook}>\n        <h1>Phonebook</h1>\n        <ContactForm />\n      </div>\n      <div className={styles.contacts}>\n        <h2>Contacts</h2>\n        <Filter />\n        <ContactList />\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport store from './redux/storage';\nimport App from './App';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactFormName\":\"styles_contactFormName__3Ksxv\",\"contactFormNumber\":\"styles_contactFormNumber__cSM-j\",\"addBtn\":\"styles_addBtn__11mD-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactList\":\"styles_contactList__3EZSb\",\"contactListItem\":\"styles_contactListItem__2xeqF\",\"removeBtn\":\"styles_removeBtn__3e2Fp\"};"],"sourceRoot":""}